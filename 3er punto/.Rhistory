maduraciónsexual <- read_csv("maduraciónsexual.csv")
View(maduraciónsexual)
head(maduraciónsexual)
maduraciónsexual <- read_csv2("maduraciónsexual.csv")
fecha_actual <- Sys.Date()
# Calcular la edad en años y agregarla como una nueva columna 'edad' en la base de datos
maduracionsexual$fecha_de_nacimiento <- as.Date(maduracionsexual$fecha_de_nacimiento, format = "%Y-%m-%d")  # Asegúrate de que la fecha de nacimiento esté en el formato correcto
head(maduraciónsexual)
View(maduraciónsexual)
fecha_actual <- Sys.Date()
# Calcular la edad en años y agregarla como una nueva columna 'edad' en la base de datos
maduracionsexual$fecha_de_nacimiento <- as.Date(maduracionsexual$fecha_de_nacimiento, format = "%Y/%m/%d")  # Asegúrate de que la fecha de nacimiento esté en el formato correcto
names(maduraciónsexual)
# Calcular la edad en años y agregarla como una nueva columna 'edad' en la base de datos
maduracionsexual$FECHANACIM <- as.Date(maduracionsexual$FECHANACIM, format = "%Y/%m/%d")  # Asegúrate de que la fecha de nacimiento esté en el formato correcto
# Calcular la edad en años y agregarla como una nueva columna 'edad' en la base de datos
maduraciónsexual$FECHANACIM <- as.Date(maduracionsexual$FECHANACIM, format = "%Y/%m/%d")  # Asegúrate de que la fecha de nacimiento esté en el formato correcto
# Calcular la edad en años y agregarla como una nueva columna 'edad' en la base de datos
maduraciónsexual$FECHANACIM <- as.Date(maduraciónsexual$FECHANACIM, format = "%Y/%m/%d")  # Asegúrate de que la fecha de nacimiento esté en el formato correcto
maduraciónsexual$Edad <- as.integer(difftime(fecha_actual, maduraciónsexual$FECHANACIM, units = "days") / 365)
# Ver los primeros registros de la base de datos con la nueva columna 'edad'
head(maduraciónsexual)
# Ver los primeros registros de la base de datos con la nueva columna 'edad'
View(maduraciónsexual)
masculino <- maduraciónsexual[maduraciónsexual$SEXO == 1, ]
femenino <- maduraciónsexual[maduraciónsexual$SEXO == 2, ]
masculino
femenino
modelo_logistico_masculino <- nls( ESTATURAP1~ a / (1 + exp(-b * Edad)), data = masculino, start = list(a = 1, b = 1))
modelo_logistico_masculino <- nls2( ESTATURAP1~ a / (1 + exp(-b * Edad)), data = masculino, start = list(a = 1, b = 1))
modelo_logistico_masculino <- nls( ESTATURAP1~ a / (1 + exp(-b * Edad)), data = masculino, start = list(a = 1, b = 1))
modelo_logistico_masculino <- nls( ESTATURAP1~ a / (1 + exp(-b * Edad)), data = masculino, start = list(a = 1, b = 1))
# Obtener los valores iniciales estimados
valores_iniciales <- coef(modelo_logistico_masculino)
print(valores_iniciales)
plot(femenino)
plot(femenino$ESTATURAP1, femenino$Edad)
modelo_logistico_masculino <- nls( ESTATURAP1~ a / (1 + exp(-b * Edad)), data = masculino, start = list(a = 1, b = 1))
plt(maduraciónsexual$ESTATURAP1~maduraciónsexual$edad)
plt(maduraciónsexual$ESTATURAP1, maduraciónsexual$edad)
plot(maduraciónsexual$ESTATURAP1, maduraciónsexual$edad)
plot(maduraciónsexual$ESTATURAP1~maduraciónsexual$edad)
,
,
plot(maduraciónsexual$ESTATURAP1, maduraciónsexual$edad)
maduraciónsexual$FECHANACIM <- as.Date(maduraciónsexual$FECHANACIM, format = "%Y-%m-%d")  # Asegúrate de que la fecha de nacimiento esté en el formato correcto
maduraciónsexual$Edad <- as.integer(difftime(fecha_actual, maduraciónsexual$FECHANACIM, units = "days") / 365)
head(maduraciónsexual)
head(maduraciónsexual)
plot(femenino$ESTATURAP1, femenino$Edad)
modelo_logistico_masculino <- nls( ESTATURAP1~ a / (1 + exp(-b * Edad)), data = masculino, start = list(a = 1, b = 1))
library(readr)
maduraciónsexual <- read_csv2("maduraciónsexual.csv")
View(maduraciónsexual)
head(maduraciónsexual)
masculino <- maduraciónsexual[maduraciónsexual$SEXO == 1, ]
femenino <- maduraciónsexual[maduraciónsexual$SEXO == 2, ]
masculino
femenino
plot(femenino$ESTATURAP1, femenino$Edad)
plot(maduraciónsexual$ESTATURAP1, maduraciónsexual$edad)
plot(femenino$Edad, femenino$ESTATURAP1)
plot(maduraciónsexual$ESTATURAP1, maduraciónsexual$edad)
names(maduraciónsexual)
plot(maduraciónsexual$ESTATURAP1, maduraciónsexual$EDAD)
plot(femenino$EDAD, femenino$ESTATURAP1)
plot( maduraciónsexual$EDAD, maduraciónsexual$ESTATURAP1)
plot(masculino$EDAD,masculino$ESTATURAP1)
#plot(femenino$EDAD, femenino$ESTATURAP1)
plot(femenino$EDAD, femenino$ESTATURAP1, pch = 19, col = "blue", xlab = "Edad", ylab = "Estatura")
# Calcular la media de ESTATURAP1 para cada valor de EDAD
media_estatura <- tapply(femenino$ESTATURAP1, femenino$EDAD, mean)
# Trazar una curva basada en los valores promedio
lines(names(media_estatura), media_estatura, col = "red", type = "l")
# Trazar una curva basada en los valores promedio
lines(names(media_estatura), media_estatura, col = "red", type = "b")
#plot(femenino$EDAD, femenino$ESTATURAP1)
plot(femenino$EDAD, femenino$ESTATURAP1, pch = 19, col = "blue", xlab = "Edad", ylab = "Estatura")
# Calcular la media de ESTATURAP1 para cada valor de EDAD
media_estatura <- tapply(femenino$ESTATURAP1, femenino$EDAD, mean)
# Trazar una curva basada en los valores promedio
lines(names(media_estatura), media_estatura, col = "red", type = "b")
modelo_logistico_femenino <- nls(ESTATURAP1 ~ L / (1 + exp(-k * (EDAD - EDAD_0))), data = femenino, start = list(L = 1, k = 1, EDAD_0 = 1))
modelo_logistico_femenino <- nls(ESTATURAP1 ~ L / (1 + exp(-k * (EDAD - EDAD_0))), data = femenino, start = list(L = 1, k = 1, EDAD_0 = 1))
modelo_logistico_femenino <- nls(ESTATURAP1 ~ L / (1 + exp(-k * (EDAD - EDAD_0))), data = femenino, start = list(L = 5, k = 1, EDAD_0 = 1))
modelo_logistico_femenino <- nls(ESTATURAP1 ~ L / (1 + exp(-k * (EDAD - EDAD_0))), data = femenino, start = list(L = 5, k = 10, EDAD_0 = 1))
modelo_logistico_femenino <- nls(ESTATURAP1 ~ L / (1 + exp(-k * (EDAD - EDAD_0))), data = femenino, start = list(L = 5, k = 10, EDAD_0 = 6))
modelo_logistico_femenino <- nls(ESTATURAP1 ~ L / (1 + exp(-k * (EDAD - EDAD_0))), data = femenino, start = list(L = 10, k = 10, EDAD_0 = 6))
modelo_logistico_femenino <- nls(ESTATURAP1 ~ L / (1 + exp(-k * (EDAD - EDAD_0))), data = femenino, start = list(L = 1000, k = 1000, EDAD_0 = 1000))
??nls
modelo_logistico_femenino <- nls(ESTATURAP1 ~ L / (1 + exp(-k * (EDAD - EDAD_0))), data = femenino, start = list(L = 1000, k = 1000, EDAD_0 = 1000),  algorithm = "plinear")
Estatura <- maduraciónsexual$ESTATURAP1
Edad <- maduraciónsexual$EDAD
Estatura <- maduraciónsexual$ESTATURAP1
Edad <- maduraciónsexual$EDAD
datos<-data.frame(Estatura, Edad)
plot(Estatura~ Edad, data=datos)
logist1 <-function(parame){
predi~parame[1]/(1+exp(-(parame[2]+parame[3]*dias.desde.naci)))
res <-mean((masa-predi)^2)
return(res)
}
predi
logist1 <-function(parame){
predi~parame[1]/(1+exp(-(parame[2]+parame[3]*dias.desde.naci)))
res <-mean((masa-predi)^2)
return(res)
}
resu <- rbga(stringMin=c(0.000001,-10,0.0001), stringMax=c(500,10,10),
suggestions=NULL,
popSize=200, iters=100,
mutationChance=NA, elitism=NA,
monitorFunc=NULL, evalFunc=logist1,
showSettings=FALSE, verbose=FALSE)
summary(predi)
logist1 <-function(parame){
predi~parame[1]/(1+exp(-(parame[2]+parame[3]*dias.desde.naci)))
res <-mean((masa-predi)^2)
return(res)
}
logist1 <-function(parame){
predi~parame[1]/(1+exp(-(parame[2]+parame[3]*dias.desde.naci)))
res <-mean((masa-predi)^2)
return(res)
}
logist1 <-function(parame){
predi~parame[1]/(1+exp(-(parame[2]+parame[3]*dias.desde.naci)))
res <-mean((masa-predi)^2)
return(res)
}
logist1 <-function(parame){
predi~parame[1]/(1+exp(-(parame[2]+parame[3]*dias.desde.naci)))
res <-mean((masa-predi)^2)
return(res)
}
predi~parame[1]/(1+exp(-(parame[2]+parame[3]*dias.desde.naci)))
res <-mean((masa-predi)^2)
return(res)
logist1 <-function(parame){
predi~parame[1]/(1+exp(-(parame[2]+parame[3]*dias.desde.naci)))
res <-mean((masa-predi)^2)
return(res)
}
logist1 <-function(parame){
predi~parame[1]/(1+exp(-(parame[2]+parame[3]*dias.desde.naci)))
res <-mean((masa-predi)^2)
return(res)
}
logist1 <-function(parame){
predi~parame[1]/(1+exp(-(parame[2]+parame[3]*dias.desde.naci)))
res <-mean((masa-predi)^2)
return(res)
}
summary(predi)
mujer<- data.frame(femenino$EDAD , femenino$ESTATURAP1)
hombre <- data.frame(masculino$EDAD , masculino$ESTATURAP1)
mujer<- data.frame(Eda=femenino$EDAD , esta=femenino$ESTATURAP1)
hombre <- data.frame(edah=masculino$EDAD , esth=masculino$ESTATURAP1)
predi~parame[1]/(1+exp(-(parame[2]+parame[3]*Eada)))
logist1 <-function(parame){
predi~parame[1]/(1+exp(-(parame[2]+parame[3]*Eada)))
res <-mean((masa-predi)^2)
return(res)
}
predi
predi~parame[1]/(1+exp(-(parame[2]+parame[3]*EDAD)))
logist1 <-function(parame){
predi~parame[1]/(1+exp(-(parame[2]+parame[3]*EDAD)))
res <-mean((masa-predi)^2)
return(res)
}
predi
res <-mean((Edaa-predi)^2)
logist1 <-function(parame){
predi~parame[1]/(1+exp(-(parame[2]+parame[3]*EDAD)))
res <-mean((Edaa-predi)^2)
return(res)
}
predi
modelo_logistico_masculino <- nls( ESTATURAP1~ a / (1 + exp(-b * Edad)), data = masculino, start = list(a = 1, b = 1))
modelo_logistico_masculino <- nls( ESTATURAP1~ a / (1 + exp(-b * EDAD)), data = masculino, start = list(a = 1, b = 1))
modelo_logistico_masculino <- nls( ESTATURAP1~ a / (1 + exp(-b * EDAD)), data = masculino, start = list(a = 1, b = 1))
modelo_logistico_masculino
modelo_femenino <- nls(ESTATURAP1 ~ L / (1 + exp(-k * (EDAD - EDAD_0))), data = femenino, start = list(L = 1, k = 1, EDAD_0 = 1))
modelo <- nls(ESTATURAP1 ~ L / (1 + exp(-k * (EDAD - EDAD_0))),
data = femenino,
start = list(L = 1, k = 1, EDAD_0 = 1),
lower = c(0, 0, -Inf),  # Limitar L y k a valores no negativos, EDAD_0 a menos infinito
upper = c(Inf, Inf, Inf)  # No imponer límites superiores
)
modelo_logistico_masculino <- nls( ESTATURAP1~ a / (1 + exp(-b * EDAD)), data = masculino, start = list(a = 1, b = 1))
modelo_logistico_femenino <- nls(ESTATURAP1 ~ L / (1 + exp(-k * (EDAD - EDAD_0))), data = femenino, start = list(L = 1000, k = 1000, EDAD_0 = 1000),  algorithm = "plinear")
mujer<- data.frame(Eda=femenino$EDAD , esta=femenino$ESTATURAP1)
hombre <- data.frame(edah=masculino$EDAD , esth=masculino$ESTATURAP1)
modmujer= nls(esta~ SSlogis(log(Eda), Asym, xmid, scal), mujer)
summary(modmujer)
## the coefficients only:
coef(modmujer)
## including their SE, etc:
coef(summary(modmujer))
## the coefficients only:
coef(modmujer)
## including their SE, etc:
coef(summary(modmujer))
mujer<- data.frame(Eda=femenino$EDAD , esta=femenino$ESTATURAP1)
hombre <- data.frame(edah=masculino$EDAD , esth=masculino$ESTATURAP1)
modmujer= nls(esta~ SSlogis(log(Eda), Asym, xmid, scal), mujer)
summary(modmujer)
## the coefficients only:
coef(modmujer)
## including their SE, etc:
coef(summary(modmujer))
mujer<- data.frame(Eda=femenino$EDAD , esta=femenino$ESTATURAP1)
hombre <- data.frame(edah=masculino$EDAD , esth=masculino$ESTATURAP1)
modmujer= nls(esta~ SSlogis(log(Eda), Asym, xmid, scal), mujer)
summary(modmujer)
## the coefficients only:
coef(modmujer)
## including their SE, etc:
coef(summary(modmujer))
mujer<- data.frame(Eda=femenino$EDAD , esta=femenino$ESTATURAP1)
hombre <- data.frame(edah=masculino$EDAD , esth=masculino$ESTATURAP1)
modmujer= nls(esta~ SSlogis(log(Eda), Asym, xmid, scal), mujer)
summary(modmujer)
## the coefficients only:
coef(modmujer)
## including their SE, etc:
coef(summary(modmujer))
plot(modmujer)
plot(femenino$EDAD , femenino$ESTATURAP1)
plot(femenino$EDAD , femenino$ESTATURAP1, type = "b", col = "blue", xlab = "Tiempo de llegada", ylab = "Velocidad de los vagones")
plot(femenino$EDAD , femenino$ESTATURAP1, type = "b", col = "blue", xlab = "Edad", ylab = "Estatuta")
plot(femenino$EDAD, femenino$ESTATURAP1, pch = 19, col = "blue", mean="Relación Estatura vs Edad fenenino",xlab = "Edad", ylab = "Estatura")
media_estatura <- tapply(femenino$ESTATURAP1, femenino$EDAD, mean)
lines(names(media_estatura), media_estatura, col = "red", type = "b")
plot(femenino$EDAD, femenino$ESTATURAP1, pch = 19, col = "blue", mean="Relación Estatura vs Edad fenenino", xlab = "Edad", ylab = "Estatura")
media_estatura <- tapply(femenino$ESTATURAP1, femenino$EDAD, mean)
lines(names(media_estatura), media_estatura, col = "red", type = "b")
plot(femenino$EDAD, femenino$ESTATURAP1, pch = 19, col = "blue", mean="fenenino", xlab = "Edad", ylab = "Estatura")
media_estatura <- tapply(femenino$ESTATURAP1, femenino$EDAD, mean)
lines(names(media_estatura), media_estatura, col = "red", type = "b")
names(femenino$ESTATURAP1)
names(maduraciónsexual$ESTATURAP1)
hombre <- data.frame(edah=masculino$EDAD , esth=masculino$ESTATURAP1)
modhombre= nls(esth~ SSlogis(log(edah), Asym, xmid, scal), hombre)
modhombre= nls(esth~ SSlogis(log(edah), Asym, xmid, scal), hombre)
hombre <- data.frame(edah=masculino$EDAD , esth=masculino$ESTATURAP1)
modhombre= nls(esth~ SSlogis(log(edah), Asym, xmid, scal), hombre)
modelo_logistico_masculino <- nls( ESTATURAP1~ a / (1 + exp(-b * EDAD)), data = masculino, start = list(a = 1, b = 1))
modmujer2 <- nls(density ~ Asym/(1 + exp((xmid - log(conc))/scal)),
data = mujer,
start = list(Asym = 3, xmid = 0, scal = 1))
modmujer2 <- nls(density ~ Asym/(1 + exp((xmid - log(conc))/scal)),
data =femenino,
start = list(Asym = 17, xmid = 0, scal = 3))
modmujer2 <- nls(esta ~ Asym/(1 + exp((xmid - log(Eda))/scal)),
data = mujer,
start = list(Asym = 17, xmid = 0, scal = 3))
modmujer2 <- nls(esta ~ Asym/(1 + exp((xmid - log(Eda))/scal)),
data = mujer,
start = list(Asym = 17, xmid = 10, scal = 3))
modhombre <- nls(esth ~ SSlogis(log(edah), Asym, xmid, scal), data = hombre,
start = list(Asym = valor_inicial_Asym, xmid = valor_inicial_xmid, scal = valor_inicial_scal),
control = nls.control(maxiter = 100))
min(masculino$ESTATURAP1)
#install.packages("readr")
library(readr)
maduraciónsexual <- read_csv2("maduraciónsexual.csv")
head(maduraciónsexual)
#View(maduraciónsexual)
#fecha_actual <- Sys.Date()
#maduraciónsexual$FECHANACIM <- as.Date(maduraciónsexual$FECHANACIM, format = "%Y-%m-%d")  # Asegúrate de que la fecha de nacimiento esté en el formato correcto
#maduraciónsexual$Edad <- as.integer(difftime(fecha_actual, maduraciónsexual$FECHANACIM, units = "days") / 365)
#head(maduraciónsexual)
min(masculino$ESTATURAP1)
min(maduraciónsexual$ESTATURAP1)
masculino <- maduraciónsexual[maduraciónsexual$SEXO == 1, ]
femenino <- maduraciónsexual[maduraciónsexual$SEXO == 2, ]
femenino
max(maduraciónsexual$ESTATURAP1)
plot(femenino$EDAD, femenino$ESTATURAP1, pch = 19, col = "blue", mean="fenenino", xlab = "Edad", ylab = "Estatura")
media_estatura <- tapply(femenino$ESTATURAP1, femenino$EDAD, mean)
lines(names(media_estatura), media_estatura, col = "red", type = "b")
plot(femenino$EDAD, femenino$ESTATURAP1, pch = 19, col = "blue", Mean="fenenino", xlab = "Edad", ylab = "Estatura")
media_estatura <- tapply(femenino$ESTATURAP1, femenino$EDAD, mean)
lines(names(media_estatura), media_estatura, col = "red", type = "b")
View(masculino)
plot(femenino$EDAD, femenino$ESTATURAP1, pch = 19, col = "blue", tittle="fenenino", xlab = "Edad", ylab = "Estatura")
media_estatura <- tapply(femenino$ESTATURAP1, femenino$EDAD, mean)
lines(names(media_estatura), media_estatura, col = "red", type = "b")
plot(femenino$EDAD, femenino$ESTATURAP1, pch = 19, col = "blue",  xlab = "Edad", ylab = "Estatura")
media_estatura <- tapply(femenino$ESTATURAP1, femenino$EDAD, mean)
lines(names(media_estatura), media_estatura, col = "red", type = "b")
mujer<- data.frame(Eda=femenino$EDAD , esta=femenino$ESTATURAP1)
hombre <- data.frame(edah=masculino$EDAD , esth=masculino$ESTATURAP1)
modmujer= nls(esta~ SSlogis(log(Eda), Asym, xmid, scal), mujer)
summary(modmujer)
## the coefficients only:
coef(modmujer)
## including their SE, etc:
coef(summary(modmujer))
plot(femenino$EDAD , femenino$ESTATURAP1, type = "b", col = "blue", xlab = "Edad", ylab = "Estatuta")
hombre <- data.frame(edah=masculino$EDAD , esth=masculino$ESTATURAP1)
modhombre= nls(esth~ SSlogis(log(edah), Asym, xmid, scal), hombre)
modelo_logistico_masculino <- nls( ESTATURAP1~ a / (1 + exp(-b * EDAD)), data = masculino, start = list(a = 1, b = 1))
modelo_logistico_masculino <- nls( ESTATURAP1~ a / (1 + exp(-b * EDAD)), data = masculino, start = list(a = 199, b = 1))
modhombre <- nls(esth ~ SSlogis(log(edah), Asym, xmid, scal), data = hombre,
start = list(Asym = valor_inicial_Asym, xmid = valor_inicial_xmid, scal = valor_inicial_scal),
control = nls.control(maxiter = 100))
plot(masculino$EDAD,masculino$ESTATURAP1)
plot( maduraciónsexual$EDAD, maduraciónsexual$ESTATURAP1)
plot( maduraciónsexual$EDAD, maduraciónsexual$ESTATURAP1)
hombre <- data.frame(edad = masculino$EDAD, estatura = masculino$ESTATURAP1)
modelo_logistico_hombre <- nls(estatura ~ 200 / (1 + exp(-b * (edad - x0))),
data = hombre,
start = list(b = 1, x0 = 1))
hombre <- data.frame(edad = masculino$EDAD, estatura = masculino$ESTATURAP1)
modelo_logistico_hombre <- nls(estatura ~ 190 / (1 + exp(-b * (edad - x0))),
data = hombre,
start = list(b = 1, x0 = 1))
hombre <- data.frame(edad = masculino$EDAD, estatura = masculino$ESTATURAP1)
modelo_logistico_hombre <- nls(estatura ~ 190 / (1 + exp(-b * (edad - x0))),
data = hombre,
start = list(b = 1, x0 = 10))
summary(modelo_logistico_hombre)
hombre
max(hombre)
modhombre <- nls(esth ~ SSlogis(log(edah), Asym, xmid, scal), data = hombre,
start = list(Asym = valor_inicial_Asym, xmid = valor_inicial_xmid, scal = valor_inicial_scal),
control = nls.control(maxiter = 100))
hombre <- data.frame(edad = masculino$EDAD, estatura = masculino$ESTATURAP1)
modelo_logistico_hombre <- nls(estatura ~ 190 / (1 + exp(-b * (edad - x0))),
data = hombre,
start = list(b = 1, x0 = 10))
summary(modelo_logistico_hombre)
modhombre <- nls(esth ~ SSlogis(log(edah), Asym, xmid, scal), data = hombre,
start = list(Asym = valor_inicial_Asym, xmid = valor_inicial_xmid, scal = valor_inicial_scal),
control = nls.control(maxiter = 100))
valores_iniciales<- coef(modelo_logistico_hombre)
print(valores_iniciales)
ajuste<- nls(y ~ modelo(b,x0), start = valores_iniciales)
ajuste<- nls(estatura ~ modelo_logistico_hombre (b,x0), start = valores_iniciales)
modhombre <- nls(esth ~ SSlogis(log(edah), Asym, xmid, scal), data = hombre,
start = list(Asym = 200, xmid = valor_inicial_xmid, scal = valor_inicial_scal),
control = nls.control(maxiter = 100))
modhombre <- nls(esth ~ SSlogis(log(edah), Asym, xmid, scal), data = hombre,
start = list(Asym = 200, xmid = valor_inicial_xmid, scal = valor_inicial_scal),
control = nls.control(maxiter = 100))
modhombre <- nls(esth ~ SSlogis(log(edah), Asym, xmid, scal), data = hombre,
start = list(Asym = 200, xmid = valor_inicial_xmid, scal = valor_inicial_scal),
control = nls.control(maxiter = 100))
modelo_logistico_masculino <- nls( ESTATURAP1~ a / (1 + exp(-b * EDAD)), data = masculino, start = list(a = 200, b = 1))
plot(masculino$EDAD,masculino$ESTATURAP1, pch = 19, col = "blue",  xlab = "Edad", ylab = "Estatura")
plot(masculino$EDAD,masculino$ESTATURAP1, pch = 19, col = "blue",  xlab = "Edad", ylab = "Estatura")
media_esta <- tapply(masculino$ESTATURAP1,masculino$EDAD, mean)
lines(names(media_esta), media_esta, col = "red", type = "b")
plot( maduraciónsexual$EDAD, maduraciónsexual$ESTATURAP1)
media_estatu<- tapply(maduraciónsexual$ESTATURAP1, maduraciónsexual$EDAD, mean)
lines(names(media_estatu), media_estatu, col = "red", type = "b")
plot( maduraciónsexual$EDAD, maduraciónsexual$ESTATURAP1, pch = 19, col = "blue",  xlab = "Edad", ylab = "Estatura")
media_estatu<- tapply(maduraciónsexual$ESTATURAP1, maduraciónsexual$EDAD, mean)
lines(names(media_estatu), media_estatu, col = "red", type = "b")
plot(masculino$EDAD,masculino$ESTATURAP1, pch = 19, col = "blue",  xlab = "Edad hombres", ylab = "Estatura Hombres")
media_esta <- tapply(masculino$ESTATURAP1,masculino$EDAD, mean)
lines(names(media_esta), media_esta, col = "red", type = "b")
plot(femenino$EDAD, femenino$ESTATURAP1, pch = 19, col = "blue",  xlab = "Edad mujeres", ylab = "Estatura mujeres")
media_estatura <- tapply(femenino$ESTATURAP1, femenino$EDAD, mean)
lines(names(media_estatura), media_estatura, col = "red", type = "b")
hombre <- data.frame(edad = masculino$EDAD, estatura = masculino$ESTATURAP1)
modelo_logistico_hombre <- nls(estatura ~ 190 / (1 + exp(-b * (edad - x0))),
data = hombre,
start = list(b = 1, x0 = 10))
summary(modelo_logistico_hombre)
modhombre <- nls(esth ~ SSlogis(log(edah), Asym, xmid, scal), data = hombre,
start = list(Asym = 200, xmid = valor_inicial_xmid, scal = valor_inicial_scal),
control = nls.control(maxiter = 100))
modhombre <- nls(esth ~ SSlogis(log(edah), Asym, xmid, scal), data = hombre,
start = list(Asym = 190, xmid = valor_inicial_xmid, scal = valor_inicial_scal),
control = nls.control(maxiter = 100))
modhombre <- nls(esth ~ SSlogis(log(edah), Asym, xmid, scal), data = hombre,
start = list(Asym = 190, xmid = 3.369932, scal =  0.148827),
control = nls.control(maxiter = 100))
modhombre <- nls(esth ~ SSlogis(log(edah), Asym, xmid, scal), data = masculino,
start = list(Asym = 190, xmid = 3.369932, scal =  0.148827),
control = nls.control(maxiter = 100))
Estatura <- maduraciónsexual$ESTATURAP1
Edad <- maduraciónsexual$EDAD
datos<-data.frame(Estatura, Edad)
plot(Estatura~ Edad, data=datos)
masculino
modelo_logistico_masculino <- nls( ESTATURAP1~ a / (1 + exp(-b * EDAD)), data = masculino, start = list(a = 190, b = 1))
hombre <- data.frame(edad = masculino$EDAD, estatura = masculino$ESTATURAP1)
modelo_logistico_hombre <- nls(estatura ~ 190 / (1 + exp(-b * (edad - x0))),
data = hombre,
start = list(b = 1, x0 = 10))
summary(modelo_logistico_hombre)
# Cargar la librería ggplot2
library(ggplot2)
library(ggplot2)
ggplot(data = hombre, aes(x = edad, y = estatura)) +
geom_point() +
labs(x = "Edad", y = "Estatura") +
geom_smooth(method = "nls",
formula = y ~ 190 / (1 + exp(-b * (x - x0))),
method.args = list(start = c(b = 1, x0 = 10)),
se = FALSE,
color = "blue") +
theme_minimal()
library(ggplot2)
ggplot(data = hombre, aes(x = edad, y = estatura)) +
geom_point() +
labs(x = "Edad de hombres", y = "Estatura de hombres") +
geom_smooth(method = "nls",
formula = y ~ 190 / (1 + exp(-b * (x - x0))),
method.args = list(start = c(b = 1, x0 = 10)),
se = FALSE,
color = "blue") +
theme_minimal()
ggplot(data = mujer, aes(x = Eda, y = esta)) +
geom_point() +
labs(x = "Edad", y = "Estatura") +
geom_smooth(method = "nls",
formula = y ~ 190 / (1 + exp(-b * (x - x0))),
method.args = list(start = c(b = 1, x0 = 10)),
se = FALSE,
color = "blue") +
theme_minimal()
min(masculino$EDAD)
max(masculino$EDAD)
max(masculino$ESTATURAP1)
max(femenino$EDAD)
min(femenino$EDAD)
ggplot(data = mujer, aes(x = esta, y = Eda)) +
geom_point() +
labs(x = "Edad", y = "Estatura") +
geom_smooth(method = "nls",
formula = y ~ 190 / (1 + exp(-b * (x - x0))),
method.args = list(start = c(b = 1, x0 = 10)),
se = FALSE,
color = "blue") +
theme_minimal()
ggplot(data = mujer, aes(x = esta, y = Eda)) +
geom_point() +
labs(x = "Estatura", y = "Edad") +
geom_smooth(method = "nls",
formula = y ~ 190 / (1 + exp(-b * (x - x0))),
method.args = list(start = c(b = 1, x0 = 10)),
se = FALSE,
color = "blue") +
theme_minimal()
nuevas_edades <- data.frame(edad = c(20, 25, 30, 35, 40))
pronosticos <- predict(modelo_logistico_hombre, newdata = nuevas_edades)
print(pronosticos)
library(ggplot2)
ggplot(data = hombre, aes(x = edad, y = estatura)) +
geom_point() +
labs(x = "Edad de hombres", y = "Estatura de hombres") +
geom_smooth(method = "nls",
formula = y ~ 190 / (1 + exp(-b * (x - x0))),
method.args = list(start = c(b = 1, x0 = 10)),
se = FALSE,
color = "blue") +
theme_minimal()
nuevas_edades <- data.frame(edad = c(20, 25, 30, 35, 40))
pronosticos <- predict(modelo_logistico_hombre, newdata = nuevas_edades)
pronosticos
Estatura <- maduraciónsexual$ESTATURAP1
Edad <- maduraciónsexual$EDAD
datos<-data.frame(Estatura, Edad)
plot(Estatura~ Edad, data=datos)
hombre <- data.frame(edad = masculino$EDAD, estatura = masculino$ESTATURAP1)
modelo_logistico_hombre <- nls(estatura ~ 190 / (1 + exp(-b * (edad - x0))),
data = hombre,
start = list(b = 1, x0 = 10))
summary(modelo_logistico_hombre)
deviance(modelo_logistico_hombre)
estatura = constante + error
media_estatura <- mean(hombre$estatura)
# Crear un vector de estatura constante con la misma longitud que tus datos
estatura_constante <- rep(media_estatura, length(hombre$estatura))
# Calcular la deviance del
datos <- read.table("Finalestilollibre400metros.txt", header = TRUE, sep = "\t")
Nadadores <- read.table("Finalestilollibre400metros.txt", header = TRUE, sep = "\t")
getwd()  # Esto mostrará el directorio de trabajo actual
Nadadores <- read.table("C:/Users/zuzul/OneDrive/Documentos/GitHub/1erParcialRNL/3er punto/Finalestilollibre400metros.txt", header = TRUE, sep = "\t")
Nadadores <- read.table("Finalestilollibre400metros.txt", header = TRUE, sep = "\t")
Nadadores <- read.table("C:/Users/zuzul/OneDrive/Documentos/GitHub/1erParcialRNL/3er punto", header = TRUE, sep = "\t")
Nadadores <- read.table("Finalestilollibre400metros.txt", header = TRUE, sep = "\t")
Nadadores <- read.table("Finalestilolibre400metros.txt", header = TRUE, sep = "\t")
Nadadores
head(Nadadores)
Nadadores <- read.table("Finalestilolibre400metros.txt", header = TRUE, sep = "\t")
head(Nadadores)
names(Nadadores)
Nadadores <- read.table("Finalestilolibre400metros.txt", header = TRUE, sep = "\t",  stringsAsFactors = FALSE)
head(Nadadores)
Nadadores <- read.table("Finalestilolibre400metros.txt", header = TRUE, sep = " ",  stringsAsFactors = FALSE)
Nadadores <- read.table("Finalestilolibre400metros.txt", header = TRUE, sep = "\t",  stringsAsFactors = FALSE)
head(Nadadores)
nombres_columnas <- c("Pais", "Nombre", "Tiempo1", "Tiempo2", "Posicion1", "Tiempo3", "Posicion2", "Tiempo4", "Posicion3", "Tiempo5", "Posicion4", "Tiempo6", "Posicion5", "Tiempo7", "Posicion6")
# Asignar nombres a las columnas del marco de datos
colnames(Nadadores) <- nombres_columnas
sexo<-c(rep(1,36),rep(2,43))
sexo
Nadadores
temp<-matrix(temp,ncol=16,byrow=T)
temp<-matrix(temp,ncol=16,byrow=T)
temp
media_estatura <- mean(hombre$estatura)
# Crear un vector de estatura constante con la misma longitud que tus datos
estatura_constante <- rep(media_estatura, length(hombre$estatura))
estatura_constante
